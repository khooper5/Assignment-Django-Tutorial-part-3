<urls.py>
from django.urls import path
from . import views 

urlpatterns = [
    path('login/', views.loginPage, name="login"),
    path('logout/', views.logoutUser, name="logout"),
    path('register/', views.registerPage, name="register"),

    path('', views.home, name="home"),
    path('room/<str:pk>/', views.room, name="room"),
    path('profile/<str:pk>/', views.userProfile, name="user-profile"),
    
    path('create-room/', views.createRoom, name="create-room"),
    path('update-room/<str:pk>/', views.updateRoom, name="update-room"),
    path('delete-room/<str:pk>/', views.deleteRoom, name="delete-room"),
    path('delete-message/<str:pk>/', views.deleteMessage, name="delete-message"),

    path('update-user/', views.updateUser, name="update-user"),
    path('topics/', views.topicsPage, name="topics"),
    path('activity/', views.activityPage, name="activity"),
]


<activity_component.html>
<div class="activities">
    <div class="activities__header">
      <h2>Recent Activities</h2>
    </div>
    {% for message in room_messages %}
    <div class="activities__box">
      <div class="activities__boxHeader roomListRoom__header">
        <a href="{% url 'user-profile' message.user.id %}" class="roomListRoom__author">
          <div class="avatar avatar--small">
            <img src="https://randomuser.me/api/portraits/women/11.jpg" />
          </div>
          <p>
            @{{message.user}}
            <span>{{message.created|timesince}} ago</span>
          </p>
        </a>

        {% if request.user == message.user %}
        <div class="roomListRoom__actions">
          <a href="{% url 'delete-message' message.id %}">
            <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
              <title>remove</title>
              <path
                d="M27.314 6.019l-1.333-1.333-9.98 9.981-9.981-9.981-1.333 1.333 9.981 9.981-9.981 9.98 1.333 1.333 9.981-9.98 9.98 9.98 1.333-1.333-9.98-9.98 9.98-9.981z"
              ></path>
            </svg>
          </a>
        </div>

        {% endif %}

      </div>
      <div class="activities__boxContent">
        <p>replied to post “<a href="{% url 'room' message.room.id %}">{{message.room}}</a>”</p>
        <div class="activities__boxRoomContent">
          {{message.body}}
        </div>
      </div>
    </div>
    {% endfor %}

  </div>

<activity.html>
{% extends 'main.html' %}

{% block content %}
    <main class="layout">
      <div class="container">
        <div class="layout__box">
          <div class="layout__boxHeader">
            <div class="layout__boxTitle">
              <a href="{% url 'home' %}">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                  <title>arrow-left</title>
                  <path
                    d="M13.723 2.286l-13.723 13.714 13.719 13.714 1.616-1.611-10.96-10.96h27.625v-2.286h-27.625l10.965-10.965-1.616-1.607z"
                  ></path>
                </svg>
              </a>
              <h3>Recent Activities</h3>
            </div>
          </div>

          <div class="activities-page layout__body">
            {% for message in room_messages %}
            <div class="activities__box">
              <div class="activities__boxHeader roomListRoom__header">
                <a href="{% url 'user-profile' message.user.id %}" class="roomListRoom__author">
                  <div class="avatar avatar--small">
                    <img src="https://randomuser.me/api/portraits/women/11.jpg" />
                  </div>
                  <p>
                    @{{message.user}}
                    <span>{{message.created|timesince}} ago</span>
                  </p>
                </a>
        
                {% if request.user == message.user %}
                <div class="roomListRoom__actions">
                  <a href="{% url 'delete-message' message.id %}">
                    <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                      <title>remove</title>
                      <path
                        d="M27.314 6.019l-1.333-1.333-9.98 9.981-9.981-9.981-1.333 1.333 9.981 9.981-9.981 9.98 1.333 1.333 9.981-9.98 9.98 9.98 1.333-1.333-9.98-9.98 9.98-9.981z"
                      ></path>
                    </svg>
                  </a>
                </div>
        
                {% endif %}
        
              </div>
              <div class="activities__boxContent">
                <p>replied to post “<a href="{% url 'room' message.room.id %}">{{message.room}}</a>”</p>
                <div class="activities__boxRoomContent">
                  {{message.body}}
                </div>
              </div>
            </div>
            {% endfor %}
          </div>
        </div>
      </div>
    </main>


{% endblock content %}

<views.py>
from django.shortcuts import render, redirect
from django.http import HttpResponse
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.db.models import Q 
from django.contrib.auth.models import User
from django.contrib.auth import authenticate, login, logout
from django.contrib.auth.forms import UserCreationForm
from .models import Room, Topic, Message
from .forms import RoomForm, UserForm

# Create your views here.

#rooms = [
#   {'id': 1, 'name': 'Lets learn python!'},
#   {'id': 2, 'name': 'Design with me'},
#  {'id': 3, 'name': 'Frontend developers'},
#]


def loginPage(request):
    page ='login'

    if request.user.is_authenticated:
        return redirect('home')

    if request.method =='POST':
        username = request.POST.get('username').lower()
        password = request.POST.get('password')

        try:
            user = User.objects.get(username=username)
        except: 
            messages.error(request, 'User does not exsit')

        user = authenticate(request, username=username, password=password)

        if user is not None:
            login(request, user)
            return redirect('home')
        else:
            messages.error(request, 'Username OR pasword does not exist')
    context = {'page': page}
    return render(request, 'base/login_register.html', context)

def logoutUser(request):
    logout(request)
    return redirect('home')

def registerPage(request):
    form = UserCreationForm()

    if request.method == 'POST':
        form = UserCreationForm(request.POST)
        if form.is_valid():
            user = form.save(commit=False)
            user.username = user.username.lower()
            user.save()
            login(request, user)
            return redirect('home')
        else:
            messages.error(request, 'An error occurred during registration')

    return render(request, 'base/login_register.html', {'form': form})


def home(request):
    q = request.GET.get('q') if request.GET.get('q') != None else ''

    rooms = Room.objects.filter(
        Q(topic__name__icontains=q) |
        Q(name__icontains=q) |
        Q(description__icontains=q)
    )

    topics = Topic.objects.all()[0:5]
    room_count = rooms.count()
    room_messages = Message.objects.filter(Q(room__topic__name__icontains=q))

    context = {'rooms': rooms, 'topics': topics, 
               'room_count': room_count, 'room_messages': room_messages}
    return render(request, 'base/home.html', context)


def room(request, pk):
    room = Room.objects.get(id=pk)
    room_messages = room.message_set.all()
    participants = room.participants.all()
    if request.method=='POST':
        message = Message.objects.create(
            user=request.user,
            room=room,
            body=request.POST.get('body')
        )
        room.participants.add(request.user)
        return redirect('room', pk=room.id)
    
    context = {'room': room, 'room_messages': room_messages, 
               'participants': participants}
    return render(request, 'base/room.html', context)


def userProfile(request, pk):
    user= User.objects.get(id=pk)
    rooms = user.room_set.all()
    room_messages = user.message_set.all()
    topics = Topic.objects.all()
    context = {'user':user, 'rooms': rooms,  
               'room_messages': room_messages, 'topics': topics}
    return render(request, 'base/profile.html', context)

@login_required(login_url='login')
def createRoom(request):
    form = RoomForm()
    topics = Topic.objects.all()
    if request.method == 'POST':
        topic_name = request.POST.get('topic')
        topic, created = Topic.objects.get_or_create(name=topic_name)

        Room.objects.create(
            host=request.user,
            topic=topic,
            name=request.POST.get('name'),
            description=request.POST.get('description'),
        )
        
        return redirect('home')

    context = {'form': form, 'topics': topics}
    return render(request, 'base/room_form.html', context)


@login_required(login_url='login')
def updateRoom(request, pk):
    room = Room.objects.get(id=pk)
    form = RoomForm(instance=room)
    topics = Topic.objects.all()

    if request.user != room.host:
        return HttpResponse('You are not allowed here!!')

    if request.method == 'POST':
        topic_name = request.POST.get('topic')
        topic, created = Topic.objects.get_or_create(name=topic_name)
        room.name= request.POST.get('name')
        room.topic= topic
        room.description= request.POST.get('description')
        room.save()
        return redirect('home')

    context = {'form': form, 'topics': topics, 'room': room}
    return render(request, 'base/room_form.html', context)

@login_required(login_url='login')
def deleteRoom(request,pk):
    room = Room.objects.get(id=pk)

    if request.user != room.host:
        return HttpResponse('You are not allowed here!!')
    
    if request.method =='POST':
        room.delete()
        return redirect('home')
    return render(request, 'base/delete.html',{'obj':room})


@login_required(login_url='login')
def deleteMessage(request,pk):
    message = Message.objects.get(id=pk)

    if request.user != message.user:
        return HttpResponse('You are not allowed here!!')
    
    if request.method =='POST':
        message.delete()
        return redirect('home')
    return render(request, 'base/delete.html',{'obj':message})

@login_required(login_url='login')
def updateUser(request):
    user = request.user
    form = UserForm(instance=user)

    if request.method == 'POST':
        form = UserForm(request.POST, instance=user)
        if form.is_valid():
            form.save()
            return redirect('user-profile', pk= user.id)

    return render(request, 'base/update-user.html', {'form': form})

def topicsPage(request):
    q = request.GET.get('q') if request.GET.get('q') != None else ''
    topics = Topic.objects.filter(name__icontains=q)
    return render(request, 'base/topics.html', {'topics': topics})

def activityPage(request):
    room_messages = Message.objects.all()
    return render(request, 'base/activity.html', {'room_messages': room_messages})


<topics.html>
{% extends 'main.html' %}

{% block content %}
    <main class="create-room layout">
      <div class="container">
        <div class="layout__box">
          <div class="layout__boxHeader">
            <div class="layout__boxTitle">
              <a href="{% url 'home' %}">
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                  <title>arrow-left</title>
                  <path
                    d="M13.723 2.286l-13.723 13.714 13.719 13.714 1.616-1.611-10.96-10.96h27.625v-2.286h-27.625l10.965-10.965-1.616-1.607z"
                  ></path>
                </svg>
              </a>
              <h3>Browse Topics</h3>
            </div>
          </div>

          <div class="topics-page layout__body">
            <form action="" method="GET" class="header__search">
              <label>
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                  <title>search</title>
                  <path
                    d="M32 30.586l-10.845-10.845c1.771-2.092 2.845-4.791 2.845-7.741 0-6.617-5.383-12-12-12s-12 5.383-12 12c0 6.617 5.383 12 12 12 2.949 0 5.649-1.074 7.741-2.845l10.845 10.845 1.414-1.414zM12 22c-5.514 0-10-4.486-10-10s4.486-10 10-10c5.514 0 10 4.486 10 10s-4.486 10-10 10z"
                  ></path>
                </svg>
                <input name="q" placeholder="Search for posts" />
              </label>
            </form>

            <ul class="topics__list">
              <li>
                <a href="{% url 'topics' %}" class="active">All <span>{{topics.count}}</span></a>
              </li>
              {% for topic in topics %}
              <li>
                <a href="{% url 'home' %}?q={{topic.name}}">{{topic.name}} <span>{{topic.room_set.all.count}}</span></a>
              </li>
              {% endfor %}
              
            </ul>
          </div>
        </div>
      </div>
    </main>

{% endblock content %}

<topics_component.html>
<div class="topics">
    <div class="topics__header">
      <h2>Browse Topics</h2>
    </div>
    <ul class="topics__list">
      <li>
        <a href="{% url 'home' %}" class="active">All <span>{{topics.count}}</span></a>
      </li>
      {% for topic in topics %}
      <li>
        <a href="{% url 'home' %}?q={{topic.name}}">{{topic.name}} <span>{{topic.room_set.all.count}}</span></a>
      </li>
      {% endfor %}
    
    </ul>
    <a class="btn btn--link" href="{% url 'topics' %}">
      More
      <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
        <title>chevron-down</title>
        <path d="M16 21l-13-13h-3l16 16 16-16h-3l-13 13z"></path>
      </svg>
    </a>
  </div>

<home.html>
{% extends 'main.html' %}

{% block content %}

    <main class="layout layout--3">
      <div class="container">

        <!-- Topics Start -->
        {% include 'base/topics_component.html' %}
        
        <!-- Topics End -->

        <!-- Room List Start -->
        <div class="roomList">
          <div class="mobile-menu">
            <form action="{% url 'home' %}" method="GET" class="header__search">
              <label>
                <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                  <title>search</title>
                  <path
                    d="M32 30.586l-10.845-10.845c1.771-2.092 2.845-4.791 2.845-7.741 0-6.617-5.383-12-12-12s-12 5.383-12 12c0 6.617 5.383 12 12 12 2.949 0 5.649-1.074 7.741-2.845l10.845 10.845 1.414-1.414zM12 22c-5.514 0-10-4.486-10-10s4.486-10 10-10c5.514 0 10 4.486 10 10s-4.486 10-10 10z"
                  ></path>
                </svg>
                <input name="q" placeholder="Search for posts" />
              </label>
            </form>
            <div class="mobile-menuItems">
              <a class="btn btn--main btn--pill" href="{% url 'topics' %}">Browse Topics</a>
              <a class="btn btn--main btn--pill" href="{% url 'activity' %}">Recent Activities</a>
            </div>
          </div>
          <div class="roomList__header">
            <div>
              <h2>Study Room</h2>
              <p>{{room_count}} Rooms available</p>
            </div>
            <a class="btn btn--main" href="{% url 'create-room' %}">
              <svg version="1.1" xmlns="http://www.w3.org/2000/svg" width="32" height="32" viewBox="0 0 32 32">
                <title>add</title>
                <path
                  d="M16.943 0.943h-1.885v14.115h-14.115v1.885h14.115v14.115h1.885v-14.115h14.115v-1.885h-14.115v-14.115z"
                ></path>
              </svg>
              Create Room
            </a>
          </div>

          {% include 'base/feed_component.html' %}
        
        </div>
        <!-- Room List End -->

        <!-- Activities Start -->
        {% include 'base/activity_component.html' %}
        
        <!-- Activities End -->
      </div>
    </main>

    {% endblock %}
